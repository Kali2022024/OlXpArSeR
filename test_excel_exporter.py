"""
–¢–µ—Å—Ç–æ–≤–∏–π —Ñ–∞–π–ª –¥–ª—è –ø–µ—Ä–µ–≤—ñ—Ä–∫–∏ Excel –µ–∫—Å–ø–æ—Ä—Ç–µ—Ä–∞
"""
import os
import sys
from decimal import Decimal
from datetime import datetime

# –î–æ–¥–∞—î–º–æ –ø–æ—Ç–æ—á–Ω—É –¥–∏—Ä–µ–∫—Ç–æ—Ä—ñ—é –¥–æ —à–ª—è—Ö—É
sys.path.append(os.path.dirname(os.path.abspath(__file__)))

from models import Product, ParsingResult
from excel_exporter import ExcelExporter

def test_excel_exporter():
    """–¢–µ—Å—Ç—É—î Excel –µ–∫—Å–ø–æ—Ä—Ç–µ—Ä"""
    try:
        # –°—Ç–≤–æ—Ä—é—î–º–æ —Ç–µ—Å—Ç–æ–≤—ñ –¥–∞–Ω—ñ
        products = [
            Product(
                name="–¢–µ—Å—Ç–æ–≤–∏–π —Ç–æ–≤–∞—Ä 1",
                price=Decimal("100.50"),
                product_url="https://www.olx.ua/test1",
                availability=True,
                sku="TEST001"
            ),
            Product(
                name="–¢–µ—Å—Ç–æ–≤–∏–π —Ç–æ–≤–∞—Ä 2",
                price=Decimal("250.00"),
                product_url="https://www.olx.ua/test2",
                availability=False,
                sku="TEST002"
            ),
            Product(
                name="–¢–µ—Å—Ç–æ–≤–∏–π —Ç–æ–≤–∞—Ä 3",
                price=Decimal("75.25"),
                product_url="https://www.olx.ua/test3",
                availability=True,
                sku="TEST003"
            )
        ]
        
        # –°—Ç–≤–æ—Ä—é—î–º–æ —Ä–µ–∑—É–ª—å—Ç–∞—Ç –ø–∞—Ä—Å–∏–Ω–≥—É
        result = ParsingResult(
            success=True,
            products=products,
            total_products=len(products),
            parsing_time=1.5
        )
        
        # –¢–µ—Å—Ç—É—î–º–æ –µ–∫—Å–ø–æ—Ä—Ç–µ—Ä
        print("üß™ –¢–µ—Å—Ç—É–≤–∞–Ω–Ω—è Excel –µ–∫—Å–ø–æ—Ä—Ç–µ—Ä–∞...")
        
        exporter = ExcelExporter()
        
        # –ï–∫—Å–ø–æ—Ä—Ç—É—î–º–æ –≤ Excel
        output_dir = "parsed_data"
        category_name = "–¢–µ—Å—Ç–æ–≤–∞ –∫–∞—Ç–µ–≥–æ—Ä—ñ—è"
        
        print("\nüìä –ü–µ—Ä—à–∏–π –µ–∫—Å–ø–æ—Ä—Ç (—Å—Ç–≤–æ—Ä–µ–Ω–Ω—è –Ω–æ–≤–æ–≥–æ —Ñ–∞–π–ª—É)...")
        filepath = exporter.export_to_excel(result, output_dir, category_name)
        
        if filepath and os.path.exists(filepath):
            print(f"‚úÖ Excel —Ñ–∞–π–ª —É—Å–ø—ñ—à–Ω–æ —Å—Ç–≤–æ—Ä–µ–Ω–æ: {filepath}")
            print(f"üìä –†–æ–∑–º—ñ—Ä —Ñ–∞–π–ª—É: {os.path.getsize(filepath)} –±–∞–π—Ç")
            
            # –ü–µ—Ä–µ–≤—ñ—Ä—è—î–º–æ —á–∏ —Ñ–∞–π–ª –º–æ–∂–Ω–∞ –≤—ñ–¥–∫—Ä–∏—Ç–∏
            try:
                from openpyxl import load_workbook
                wb = load_workbook(filepath)
                ws = wb.active
                print(f"üìã –ù–∞–∑–≤–∞ –ª–∏—Å—Ç–∞: {ws.title}")
                print(f"üìä –ö—ñ–ª—å–∫—ñ—Å—Ç—å —Ä—è–¥–∫—ñ–≤: {ws.max_row}")
                print(f"üìä –ö—ñ–ª—å–∫—ñ—Å—Ç—å –∫–æ–ª–æ–Ω–æ–∫: {ws.max_column}")
                wb.close()
                print("‚úÖ –§–∞–π–ª —É—Å–ø—ñ—à–Ω–æ –≤—ñ–¥–∫—Ä–∏—Ç–æ —Ç–∞ –ø—Ä–æ—á–∏—Ç–∞–Ω–æ")
            except Exception as e:
                print(f"‚ùå –ü–æ–º–∏–ª–∫–∞ –ø—Ä–∏ –≤—ñ–¥–∫—Ä–∏—Ç—Ç—ñ —Ñ–∞–π–ª—É: {e}")
        else:
            print("‚ùå –ü–æ–º–∏–ª–∫–∞ –ø—Ä–∏ —Å—Ç–≤–æ—Ä–µ–Ω–Ω—ñ Excel —Ñ–∞–π–ª—É")
            return
        
        # –¢–µ—Å—Ç—É—î–º–æ –¥–æ–¥–∞–≤–∞–Ω–Ω—è –¥—É–±–ª—ñ–∫–∞—Ç—ñ–≤
        print("\nüîÑ –¢–µ—Å—Ç—É–≤–∞–Ω–Ω—è –¥–æ–¥–∞–≤–∞–Ω–Ω—è –¥—É–±–ª—ñ–∫–∞—Ç—ñ–≤...")
        
        # –°—Ç–≤–æ—Ä—é—î–º–æ –Ω–æ–≤—ñ —Ç–æ–≤–∞—Ä–∏ –∑ –¥—É–±–ª—ñ–∫–∞—Ç–∞–º–∏
        duplicate_products = [
            Product(
                name="–¢–µ—Å—Ç–æ–≤–∏–π —Ç–æ–≤–∞—Ä 1",  # –î—É–±–ª—ñ–∫–∞—Ç
                price=Decimal("110.00"),
                product_url="https://www.olx.ua/test1_duplicate",
                availability=True,
                sku="TEST001_DUP"
            ),
            Product(
                name="–ù–æ–≤–∏–π —Ç–æ–≤–∞—Ä 4",  # –ù–æ–≤–∏–π —Ç–æ–≤–∞—Ä
                price=Decimal("300.00"),
                product_url="https://www.olx.ua/test4",
                availability=True,
                sku="TEST004"
            ),
            Product(
                name="–¢–µ—Å—Ç–æ–≤–∏–π —Ç–æ–≤–∞—Ä 2",  # –î—É–±–ª—ñ–∫–∞—Ç
                price=Decimal("260.00"),
                product_url="https://www.olx.ua/test2_duplicate",
                availability=False,
                sku="TEST002_DUP"
            )
        ]
        
        duplicate_result = ParsingResult(
            success=True,
            products=duplicate_products,
            total_products=len(duplicate_products),
            parsing_time=0.5
        )
        
        # –ï–∫—Å–ø–æ—Ä—Ç—É—î–º–æ –∑ –¥—É–±–ª—ñ–∫–∞—Ç–∞–º–∏
        print("üìä –î—Ä—É–≥–∏–π –µ–∫—Å–ø–æ—Ä—Ç (–¥–æ–¥–∞–≤–∞–Ω–Ω—è –¥–æ —ñ—Å–Ω—É—é—á–æ–≥–æ —Ñ–∞–π–ª—É)...")
        updated_filepath = exporter.export_to_excel(duplicate_result, output_dir, category_name)
        
        if updated_filepath and os.path.exists(updated_filepath):
            print(f"‚úÖ –§–∞–π–ª —É—Å–ø—ñ—à–Ω–æ –æ–Ω–æ–≤–ª–µ–Ω–æ: {updated_filepath}")
            print(f"üìä –ù–æ–≤–∏–π —Ä–æ–∑–º—ñ—Ä —Ñ–∞–π–ª—É: {os.path.getsize(updated_filepath)} –±–∞–π—Ç")
            
            # –ü–µ—Ä–µ–≤—ñ—Ä—è—î–º–æ –æ–Ω–æ–≤–ª–µ–Ω–∏–π —Ñ–∞–π–ª
            try:
                from openpyxl import load_workbook
                wb = load_workbook(updated_filepath)
                ws = wb.active
                print(f"üìã –ù–∞–∑–≤–∞ –ª–∏—Å—Ç–∞: {ws.title}")
                print(f"üìä –ö—ñ–ª—å–∫—ñ—Å—Ç—å —Ä—è–¥–∫—ñ–≤: {ws.max_row}")
                print(f"üìä –ö—ñ–ª—å–∫—ñ—Å—Ç—å –∫–æ–ª–æ–Ω–æ–∫: {ws.max_column}")
                wb.close()
                print("‚úÖ –û–Ω–æ–≤–ª–µ–Ω–∏–π —Ñ–∞–π–ª —É—Å–ø—ñ—à–Ω–æ –≤—ñ–¥–∫—Ä–∏—Ç–æ —Ç–∞ –ø—Ä–æ—á–∏—Ç–∞–Ω–æ")
            except Exception as e:
                print(f"‚ùå –ü–æ–º–∏–ª–∫–∞ –ø—Ä–∏ –≤—ñ–¥–∫—Ä–∏—Ç—Ç—ñ –æ–Ω–æ–≤–ª–µ–Ω–æ–≥–æ —Ñ–∞–π–ª—É: {e}")
        else:
            print("‚ùå –ü–æ–º–∏–ª–∫–∞ –ø—Ä–∏ –æ–Ω–æ–≤–ª–µ–Ω–Ω—ñ Excel —Ñ–∞–π–ª—É")
            
    except Exception as e:
        print(f"‚ùå –ü–æ–º–∏–ª–∫–∞ –ø—Ä–∏ —Ç–µ—Å—Ç—É–≤–∞–Ω–Ω—ñ: {e}")
        import traceback
        traceback.print_exc()

if __name__ == "__main__":
    test_excel_exporter()
